[
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Vitessce visualization for single dataset\n",
    "This notebook shows a Vitessce visualization for a dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For this template, symlinking is not required, as the data is fetched from the remote repository.\n",
    "This template only visualizes one dataset, it will automatically select the first of the datasets."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "!pip install https://github.com/hubmapconsortium/portal-visualization/archive/refs/tags/0.4.6.zip\n",
    "!pip install vitessce anywidget uvicorn starlette"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import json\n",
    "from portal_visualization.client import ApiClient\n",
    "from vitessce import VitessceConfig"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "## linked datasets\n",
    "uuids = ['9358adf4674413a0e2ef1a970b66714e']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "client = ApiClient(\n",
    "    elasticsearch_endpoint='https://search.api.hubmapconsortium.org',\n",
    "    portal_index_path=f'/v3/portal/search',\n",
    "    assets_endpoint='https://assets.hubmapconsortium.org',\n",
    "    soft_assay_endpoint='https://ingest.api.hubmapconsortium.org',\n",
    "    soft_assay_endpoint_path='assaytype',\n",
    "    entity_api_endpoint='https://entity.api.hubmapconsortium.org',\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "uuid = uuids[0]\n",
    "entity = client.get_entity(uuid)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_image_parent(entity):\n",
    "    ancestors = entity.get('immediate_ancestor_ids')\n",
    "    if len(ancestors) > 0:\n",
    "        parent = ancestors[0]\n",
    "        parent_entity = client.get_entity(parent)\n",
    "        if parent_entity.get('entity_type') == 'Dataset':\n",
    "            return parent\n",
    "    return None\n",
    "\n",
    "parent = None\n",
    "if 'Image Pyramid' in entity.get('assay_display_name'):\n",
    "    parent = get_image_parent(entity)\n",
    "# test this later\n",
    "epic_uuid = None\n",
    "if 'segmentation_mask' in entity.get('vitessce-hints') and entity.get(\n",
    "        'status') != 'Error':\n",
    "    if parent is None:\n",
    "        get_image_parent(entity)\n",
    "    if 'epic' in entity.get('vitessce-hints'):\n",
    "        epic_uuid = uuid\n",
    "\n",
    "vitessce_conf = client.get_vitessce_conf_cells_and_lifted_uuid(\n",
    "    entity,\n",
    "    parent=parent,\n",
    "    epic_uuid=epic_uuid,\n",
    ").vitessce_conf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "vitessce_conf.conf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "conf = VitessceConfig.from_dict(vitessce_conf.conf)\n",
    "conf.widget()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "## If you get a JavaScript error when running the above cell, it is likely due \n",
    "## to Anywidget needing to be installed before the workspace is launched.\n",
    "\n",
    "## Check that anywidget is installed\n",
    "## Uncomment the following line:\n",
    "# import anywidget \n",
    "\n",
    "## If it is not yet installed:\n",
    "# !pip install anywidget\n",
    "\n",
    "## Once you have checked that it is installed, close this window.\n",
    "## In the Workspace overview page, stop all jobs.\n",
    "## Then, launch the Workspace again."
   ]
  }
 ]
